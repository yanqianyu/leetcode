//
//  main.cpp
//  leetcode.234
//
//  Created by apple on 2016/11/1.
//  Copyright © 2016年 apple. All rights reserved.
//

#include <iostream>

using namespace std;
 struct ListNode {
     int val;
     ListNode *next;
     ListNode(int x) : val(x), next(NULL) {}
 };
class Solution {
public:
    ListNode* reversal(ListNode* head)
    {
        if(head==NULL)
            return head;
        ListNode* pre=head;
        ListNode* p=head->next;
        pre->next=NULL;
        ListNode* temp;
        while(p!=NULL){
            temp=p->next;
            p->next=pre;
            pre=p;
            p=temp;
        }
        return pre;
    }
    ListNode* part(ListNode* head){
        ListNode *p=head;
        while(p->next!=NULL&&p->next->next!=NULL){
            p=p->next->next;
            head=head->next;
        }
        p=head->next;
        head->next=NULL;
        return p;
    }
    bool isPalindrome(ListNode* head) {
        if(head==NULL||head->next==NULL)
            return true;
        ListNode* rehead=part(head);
        rehead=reversal(rehead);
        ListNode* temp=head;
        while(rehead&&temp){
            if(temp->val!=rehead->val)
                return false;
            temp=temp->next;
            rehead=rehead->next;
        }
        return true;
    }
};
