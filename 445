/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
#include <iostream>

using namespace std;
struct ListNode {
    int val;
    ListNode *next;
    ListNode(int x) : val(x), next(NULL) {}
};
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(l1==NULL)
            return l2;
        if(l2==NULL)
            return l1;
        
        int len1=0;
        int len2=0;
        for(ListNode* p=l1;p!=NULL;p=p->next)
            len1++;
        for(ListNode* p=l2;p!=NULL;p=p->next)
            len2++;
        if(len2>len1){
            swap(len1, len2);
            swap(l1, l2);
        }
        
        ListNode* head=new ListNode(0);
        ListNode* cur=head;
        
        for(int i=len1-len2;i!=0;i--){
            cur->next=new ListNode(l1->val);
            cur=cur->next;
            l1=l1->next;
        }
        while(l1){
            cur->next=new ListNode(l1->val+l2->val);
            cur=cur->next;
            l1=l1->next;
            l2=l2->next;
        }
        
        ListNode* b=head;
        cur=head->next;
        while(cur){
            if(cur->val<9)
                b=cur;
            else if(cur->val>9){
                while(cur!=b){
                    b->val=(b->val+1)%10;
                    b=b->next;
                }
                cur->val-=10;
            }
            cur=cur->next;
        }
        
        if(head->val==1)
            return head;
        return head->next;
    }
};
