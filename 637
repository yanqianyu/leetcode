#include <iostream>
#include <queue>
#include <vector>
using namespace std;
struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode(int x) : val(x), left(NULL), right(NULL) {}
};
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector<double> ret;
        if(root==NULL){
            return ret;
        }
        queue<TreeNode*> que;
        que.push(root);
        TreeNode* temp;
        while(!que.empty()){
            int n=que.size();
            double sum=0;
            for(int i=0;i<n;i++){
                temp=que.front();
                que.pop();
                sum+=temp->val;
                if(temp->left!=NULL)
                    que.push(temp->left);
                if(temp->right!=NULL)
                    que.push(temp->right);
            }
            ret.push_back(sum/(double)n);
        }
        return ret;
    }
};
